{"version":3,"sources":["webpack://chris-albanese-portfolio/./src/components/contact.js"],"names":["Contact","props","handleChange","e","setState","target","name","value","handleRecaptcha","handleSubmit","preventDefault","data","form","fetch","method","headers","body","getAttribute","state","Object","keys","map","key","encodeURIComponent","join","then","navigateTo","catch","error","alert","render","css","id","action","onSubmit","this","type","onChange","htmlFor","required","placeholder","ref","sitekey","Component"],"mappings":"q+EAcqBA,E,YACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAIFC,aAAe,SAACC,GAAO,IAAD,EACpB,EAAKC,WAAL,MAAiBD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,MAA1C,KANiB,EASnBC,gBAAkB,SAACD,GACjB,EAAKH,SAAS,CAAE,uBAAwBG,KAVvB,EAanBE,aAAe,SAACN,GACdA,EAAEO,iBACF,IAtBYC,EAsBNC,EAAOT,EAAEE,OACfQ,MAAM,IAAK,CACTC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BC,MA1BUL,EA0BG,OAAD,QACV,YAAaC,EAAKK,aAAa,SAC5B,EAAKC,OA3BPC,OAAOC,KAAKT,GAChBU,KAAI,SAACC,GAAD,OAASC,mBAAmBD,GAAO,IAAMC,mBAAmBZ,EAAKW,OACrEE,KAAK,QA4BHC,MAAK,kBAAMC,QAAWd,EAAKK,aAAa,cACxCU,OAAM,SAACC,GAAD,OAAWC,MAAMD,OAzBT,EA4BnBhB,KA5BmB,wLAEjB,EAAKM,MAAQ,GAFI,E,+BAuCnBY,OAAA,WACE,OACE,mBACEC,IAAG,IAIH,eACEA,IAAG,EASHC,GAAG,YAEH,cACED,IAAG,GADL,eAOA,aACEA,IAAG,GADL,kEAQA,6NAMA,gBACEzB,KAAK,cACLQ,OAAO,OACPmB,OAAO,eACP,eAAa,OACb,mBAAiB,YACjB,yBAAuB,OACvBC,SAAUC,KAAK1B,aACfsB,IAAG,IAWH,iBACEK,KAAK,SACL9B,KAAK,cACLC,MAAM,cACN8B,SAAUF,KAAKjC,gBAEjB,aACE6B,IAAG,IASH,iBACEO,QAAQ,OACRP,IAAG,GAFL,eAQA,iBACEK,KAAK,OACL9B,KAAK,OACL0B,GAAG,OACHO,UAAQ,EACRC,YAAY,aACZH,SAAUF,KAAKjC,aACf6B,IAAG,MAWP,aACEA,IAAG,IASH,iBACEO,QAAQ,QACRP,IAAG,GAFL,gBAQA,iBACEK,KAAK,QACL9B,KAAK,QACL0B,GAAG,QACHO,UAAQ,EACRC,YAAY,kBACZH,SAAUF,KAAKjC,aACf6B,IAAG,MAYP,aACEA,IAAG,IASH,iBACEO,QAAQ,UACRP,IAAG,GAFL,aAQA,oBACEzB,KAAK,UACL0B,GAAG,UACHQ,YAAY,8BACZH,SAAUF,KAAKjC,aACf6B,IAAG,MAaP,aACEA,IAAG,IAKH,iBAAOO,QAAQ,aAAf,uCACuC,KACrC,iBAAOhC,KAAK,YAAY0B,GAAG,iBAI/B,eACED,IAAG,IAUH,gBACEA,IAAG,KAQL,gBACEA,IAAG,IAUH,QAAC,IAAD,CACEU,IAAI,YACJC,QAAQ,2CACRL,SAAUF,KAAK3B,qBAKrB,aACEuB,IAAG,IASH,gBACEA,IAAG,KAQL,kBACEK,KAAK,SACLL,IAAG,GAFL,gB,GA5RuBY","file":"375639e3-b7dfcd50c4eedea28f54.js","sourcesContent":["import React, { Component } from 'react'\nimport { css } from '@emotion/react'\n// import { navigateTo } from \"gatsby-link\";\nimport navigateTo from 'gatsby-link'\nimport ReCAPTCHA from 'react-google-recaptcha'\n\n// const RECAPTCHA_KEY = process.env.SITE_RECAPTCHA_KEY\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&')\n}\n\nexport default class Contact extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  handleRecaptcha = (value) => {\n    this.setState({ 'g-recaptcha-response': value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const form = e.target\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...this.state,\n      }),\n    })\n      .then(() => navigateTo(form.getAttribute('action')))\n      .catch((error) => alert(error))\n  }\n\n  form = css({\n    fontSize: '1.25rem',\n    overflow: 'hidden',\n    backgroundColor: 'transparent',\n    boxShadow: '0 0 10px 0 black',\n    zIndex: 999,\n    display: 'flex',\n    '@media (max-width: 600px)': {\n      display: 'block',\n    },\n  })\n  render() {\n    return (\n      <section\n        css={css`\n          background-color: #c0e0de;\n        `}\n      >\n        <div\n          css={css`\n            max-width: 1200px;\n            margin: 0 auto;\n            background-color: #c0e0de;\n            font-size: 1.15em;\n            display: flex;\n            flex-direction: column;\n            padding: 25px 50px 50px 50px;\n          `}\n          id=\"contact\"\n        >\n          <h2\n            css={css`\n              text-align: center;\n            `}\n          >\n            Contact Me\n          </h2>\n          <p\n            css={css`\n              text-align: center;\n              font-weight: bold;\n            `}\n          >\n            Do you want to hire me? Need a consultation on a new project?\n          </p>\n          <p>\n            Perhaps, you need assistance moving a large sum of money\n            internationally and require someone who won't ask a lot of\n            questions. ¯\\_(ツ)_/¯ Whatever the reason, don't be shy. I'd love to\n            hear from you.\n          </p>\n          <form\n            name=\"contactForm\"\n            method=\"POST\"\n            action=\"/formSuccess\"\n            data-netlify=\"true\"\n            netlify-honeypot=\"bot-field\"\n            data-netlify-recaptcha=\"true\"\n            onSubmit={this.handleSubmit}\n            css={css`\n              font-size: 1rem;\n              display: flex;\n              flex-direction: column;\n              justify-content: stretch;\n              background-color: #f1f7ed;\n              padding: 30px;\n              margin: 0 -15px;\n              border-radius: 5px;\n            `}\n          >\n            <input\n              type=\"hidden\"\n              name=\"contactForm\"\n              value=\"contactForm\"\n              onChange={this.handleChange}\n            />\n            <p\n              css={css`\n                display: flex;\n                justify-content: center;\n                flex-wrap: wrap;\n                @media (max-width: 535px) {\n                  justify-content: flex-start;\n                }\n              `}\n            >\n              <label\n                htmlFor=\"name\"\n                css={css`\n                  width: 115px;\n                `}\n              >\n                Your Name:\n              </label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                required\n                placeholder=\" your name\"\n                onChange={this.handleChange}\n                css={css`\n                  width: 70%;\n                  margin-left: 15px;\n                  border-radius: 5px;\n                  @media (max-width: 535px) {\n                    width: 90%;\n                    margin-left: 0;\n                  }\n                `}\n              />\n            </p>\n            <p\n              css={css`\n                display: flex;\n                justify-content: center;\n                flex-wrap: wrap;\n                @media (max-width: 535px) {\n                  justify-content: flex-start;\n                }\n              `}\n            >\n              <label\n                htmlFor=\"email\"\n                css={css`\n                  width: 115px;\n                `}\n              >\n                Your Email:\n              </label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                required\n                placeholder=\" your@email.com\"\n                onChange={this.handleChange}\n                css={css`\n                  width: 70%;\n                  margin-left: 15px;\n                  border-radius: 5px;\n                  @media (max-width: 535px) {\n                    width: 90%;\n                    margin-left: 0;\n                  }\n                `}\n              />\n            </p>\n\n            <p\n              css={css`\n                display: flex;\n                justify-content: center;\n                flex-wrap: wrap;\n                @media (max-width: 535px) {\n                  justify-content: flex-start;\n                }\n              `}\n            >\n              <label\n                htmlFor=\"message\"\n                css={css`\n                  width: 115px;\n                `}\n              >\n                Message:\n              </label>\n              <textarea\n                name=\"message\"\n                id=\"message\"\n                placeholder=\"Let me know how I can help!\"\n                onChange={this.handleChange}\n                css={css`\n                  border-radius: 5px;\n                  margin-left: 15px;\n                  width: 70%;\n                  min-height: 10vw;\n                  @media (max-width: 535px) {\n                    width: 90%;\n                    height: 50vw;\n                    margin-left: 0;\n                  }\n                `}\n              />\n            </p>\n            <p\n              css={css`\n                visibility: hidden;\n                position: absolute;\n              `}\n            >\n              <label htmlFor=\"bot-field\">\n                Don’t fill this out if you're human:{' '}\n                <input name=\"bot-field\" id=\"bot-field\" />\n              </label>\n            </p>\n\n            <div\n              css={css`\n                display: flex;\n                justify-content: center;\n                flex-wrap: wrap;\n\n                @media (max-width: 535px) {\n                  justify-content: flex-start;\n                }\n              `}\n            >\n              <span\n                css={css`\n                  width: 115px;\n\n                  @media (max-width: 564px) {\n                    display: none;\n                  }\n                `}\n              />\n              <span\n                css={css`\n                  width: 70%;\n                  margin-left: 15px;\n                  border-radius: 5px;\n                  @media (max-width: 535px) {\n                    width: 90%;\n                    margin-left: 0;\n                  }\n                `}\n              >\n                <ReCAPTCHA\n                  ref=\"recaptcha\"\n                  sitekey=\"6LdSXHoUAAAAAEtEK_b6AMI8gXK2sLNLZRVqWTNh\"\n                  onChange={this.handleRecaptcha}\n                />\n              </span>\n            </div>\n\n            <p\n              css={css`\n                display: flex;\n                justify-content: center;\n                flex-wrap: wrap;\n                @media (max-width: 535px) {\n                  justify-content: flex-start;\n                }\n              `}\n            >\n              <span\n                css={css`\n                  width: 70%;\n                  @media (max-width: 564px) {\n                    display: none;\n                  }\n                `}\n              />\n\n              <button\n                type=\"submit\"\n                css={css`\n                  margin-top: 15px;\n                  width: 130px;\n                  border-radius: 5px;\n                  background-color: #bada55;\n                  color: rgb(69, 69, 69);\n                  font-size: 1rem;\n                  font-weight: 800;\n                  box-shadow: 0px 1px 1px 0 rgba(69, 69, 69, 0.439);\n                  cursor: pointer;\n                  transition: all 0.3s ease 0s;\n                  &:hover {\n                    background-color: #82d8d8;\n                  }\n                `}\n              >\n                Send It\n              </button>\n            </p>\n          </form>\n        </div>\n      </section>\n    )\n  }\n}\n"],"sourceRoot":""}